API_KEY = "REMOVED"
import torch
from aiogram import Bot
from model import myLSTM  # –ó–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Ç–≤–æ—é –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É
import pandas as pd
import asyncio
import joblib
# --- –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏ ---
model = myLSTM()
model.load_state_dict(torch.load("model2.pth"))
model.eval()
scaler = joblib.load("scaler.pkl")

def predict():
    df = pd.read_csv("latest_data.csv")  # –ò–ª–∏ —Ç–≤–æ–π —Å–ø–æ—Å–æ–± –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
    input_tensor = torch.tensor(df.values).float().unsqueeze(0)
    with torch.no_grad():
        prediction = model(input_tensor).item()
    return prediction

# --- –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram ---
async def send_prediction():
    TOKEN = "–¢–í–û–ô_–¢–û–ö–ï–ù"
    CHANNEL_ID = "@–Ω–∞–∑–≤–∞–Ω–∏–µ_–∫–∞–Ω–∞–ª–∞"  # –∏–ª–∏ ID, –µ—Å–ª–∏ –∫–∞–Ω–∞–ª –ø—Ä–∏–≤–∞—Ç–Ω—ã–π
    bot = Bot(token=TOKEN)
    pred = predict()
    text = f"üîÆ –ü—Ä–æ–≥–Ω–æ–∑ –∫—É—Ä—Å–∞ BTC –Ω–∞ –∑–∞–≤—Ç—Ä–∞: {pred:.2f} USD"
    await bot.send_message(CHANNEL_ID, text)
    await bot.session.close()

# --- –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞ ---
if __name__ == "__main__":
    asyncio.run(send_prediction())
